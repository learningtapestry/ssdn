import isEmpty from "lodash/fp/isEmpty";
import React, { useCallback, useEffect, useState } from "react";
import { Dropdown, DropdownButton, Table } from "react-bootstrap";

import { displayDate } from "../../app-helper";
import LogEvent from "../../interfaces/log-event";
import AWSService from "../../services/aws-service";

export default function Logs() {
  const [logGroups, setLogGroups] = useState<string[]>([]);
  const [logEvents, setLogEvents] = useState<LogEvent[]>([]);
  const [selectedLogGroup, setSelectedLogGroup] = useState("Log Groups");

  const fetchLogEvents = async (logGroup: string) => {
    const retrievedLogEvents = await AWSService.retrieveLogEvents(logGroup);
    setLogEvents(retrievedLogEvents);
  };

  useEffect(() => {
    const fetchData = async () => {
      const retrievedGroups = await AWSService.retrieveLogGroups();
      if (retrievedGroups && !isEmpty(retrievedGroups)) {
        setLogGroups(retrievedGroups);
        setSelectedLogGroup(retrievedGroups[0]);
        await fetchLogEvents(retrievedGroups[0]);
      }
    };

    fetchData();
  }, []);

  const handleChangeLogGroup = useCallback(async (eventKey: any) => {
    setSelectedLogGroup(eventKey);
    await fetchLogEvents(eventKey);
  }, []);

  const renderLogGroups = () =>
    logGroups.map((group) => (
      <Dropdown.Item key={group} eventKey={group} onSelect={handleChangeLogGroup}>
        {group}
      </Dropdown.Item>
    ));

  const renderLogEvents = () =>
    logEvents.map((event) => (
      <tr key={`${event.creationDate.getTime()}_${event.message}`}>
        <td>{displayDate(event.creationDate)}</td>
        <td>
          <code>{event.message}</code>
        </td>
      </tr>
    ));

  return (
    <section id="admin-settings">
      <h1>Logs</h1>
      <p>
        This section lists the latest logs generated by the SSDN components and functions. Choose
        the log group you want to inspect from the dropdown below.
      </p>
      <p>For more detailed records, please refer to CloudWatch Logs in your AWS account.</p>
      <DropdownButton id="log-groups" title={selectedLogGroup}>
        {renderLogGroups()}
      </DropdownButton>
      <Table striped={true} hover={true} className="mt-3">
        <thead>
          <tr>
            <th>Date</th>
            <th>Message</th>
          </tr>
        </thead>
        <tbody>{renderLogEvents()}</tbody>
      </Table>
    </section>
  );
}
